Guide for certifying Argus PEP-j
================================

First of all, the genral Argus documentation is here
https://twiki.cern.ch/twiki/bin/view/EGEE/AuthorizationFramework

Argus is a authorization framework, to authorize users on grid sites an provide
mappings from grid users to local users. The PEP-j is a client library in java
for retrieving authorization information form the policy servers. 

The testplan which has been used as a base for these tests is located at
https://edms.cern.ch/document/986067

All these tests are basically client API tests, and they are run using a pepj 
cli client, developed for this. 

These tests assume that the certificate with which the testing is done is part 
of the "dteam" VO. If this isn't the case, please change it to the the 
appropriate VO in create-pap-setup.sh and pepj-tests.sh

Setup
=====

For these tests you will need two machines. One will act as the Argus PAP, PDP
and PEPd server. The other will be used as the client side PEP-j machine, where
the actual testing will be done.

First install an Argus machine. It has it's own glite-ARGUS nodetype. Configure
this machine with the default values. 

Then install a machine for the PEP-j tests. I suggest using the glite-UI 
repository for this. Install a glite-UI machine, and add the packages from the
patch. After that, you still need to install java (at the moment, 
java-1.6.0-openjdk). 

Now you need to add a local user, and a test certificate for that user. Then 
change to that user and in the tests directory run
./create-pap-setup.sh
This command creates the PAP setup info needed. Copy the "pap-config" directory
over to the Argus server. There run 
pap-config/configure-pap.sh
This should add the reuqired rules to the PAP. 


Running test
============

On the PEP-j node, as the user with a grid certificate, simply change to the
tests directory and run
./pepj-tests.sh -s <argus-server-name>

The script tests the most common usecases, and report if the tests succeed. 
The tests should take under 5 minutes. 
